--- hidkbd.c	Sun Jul 13 20:40:16 2014
+++ hidkbd.c.do-not-touch-ctrl-aenpmhbf	Sun Jul 13 20:41:59 2014
@@ -134,10 +134,10 @@
 	for (i = 0; i < HIDKBDTRACESIZE; i++) {
 		struct hidkbdtraceinfo *p =
 		    &hidkbdtracedata[(i+hidkbdtraceindex)%HIDKBDTRACESIZE];
-		printf("%lld.%06ld: mod=0x%02x key0=0x%02x key1=0x%02x "
+		printf("%lld.%06ld: key0=0x%02x key1=0x%02x "
 		       "key2=0x%02x key3=0x%02x\n",
 		       (long long)p->tv.tv_sec, p->tv.tv_usec,
-		       p->ud.modifiers, p->ud.keycode[0], p->ud.keycode[1],
+		       p->ud.keycode[0], p->ud.keycode[1],
 		       p->ud.keycode[2], p->ud.keycode[3]);
 	}
 }
@@ -268,15 +268,98 @@
 		printf("\n");
 	}
 #endif
+	// bloody hell, everybody thinks they can do whatever they want
+	// with control + n,p,m,h,b
+	int has_control_only = 0;
+	int n_pressed = 0;
 
 	/* extract variable keys */
-	for (i = 0; i < kbd->sc_nvar; i++) 
+	for (i = 0; i < kbd->sc_nvar; i++) {
 		ud->var[i] = (u_int8_t)hid_get_data(data, &kbd->sc_var[i].loc);
-
+		if (ud->var[i] > 0) {
+			DPRINTFN(3,("var: %d = %x masked: %x, sc_var[i].key: %x\n",i,ud->var[i],ud->var[i] & kbd->sc_var[i].mask,kbd->sc_var[i].key));
+			if ((ud->var[i] & kbd->sc_var[i].mask) && kbd->sc_var[i].key == 0xe0) {
+				has_control_only = 1;
+			} else {
+				has_control_only = 0;
+			}
+		}
+	}
 	/* extract keycodes */
 	memcpy(ud->keycode, data + kbd->sc_keycodeloc.pos / 8,
-	    kbd->sc_nkeycode);
+		   kbd->sc_nkeycode);
 
+	for (i = 0; i < kbd->sc_nkeycode; i++)
+		if (ud->keycode[i] != 0)
+			n_pressed++;
+
+	DPRINTFN(3,("has control only: %d, n_pressed: %d\n",has_control_only,n_pressed));
+	if (has_control_only) {
+		#define KEY_N     0x11
+		#define KEY_M     0x10
+		#define KEY_D     0x07
+		#define KEY_F     0x09
+		#define KEY_P     0x13
+		#define KEY_B     0x05
+		#define KEY_H     0x0b
+		#define KEY_E     0x08
+		#define KEY_A     0x04
+		#define KEY_UP    0x52
+		#define KEY_DOWN  0x51
+		#define KEY_LEFT  0x50
+		#define KEY_RIGHT 0x4f
+		#define KEY_BS    0x2a
+		#define KEY_RET   0x28
+		#define KEY_HOME  0x4a
+		#define KEY_END   0x4d
+		int leave_control_on = 0;
+		int modified = 0;
+		for (i = 0; i < kbd->sc_nkeycode; i++) {
+			int key = ud->keycode[i];
+			if (key == 0)
+				continue;
+			DPRINTFN(3,("key: %d = %x\n",i,key));
+			int rewrite = 0;
+			switch(key) {
+			case KEY_N:
+				rewrite = KEY_DOWN;
+				break;
+			case KEY_P:
+				rewrite = KEY_UP;
+				break;
+			case KEY_M:
+				rewrite = KEY_RET;
+				break;
+			case KEY_F:
+				rewrite = KEY_RIGHT;
+				break;
+			case KEY_B:
+				rewrite = KEY_LEFT;
+				break;
+			case KEY_H:
+				rewrite = KEY_BS;
+				break;
+			case KEY_A:
+				rewrite = KEY_HOME;
+				break;
+			case KEY_E:
+				rewrite = KEY_END;
+				break;
+			}
+			if (rewrite) {
+				DPRINTFN(3,("rewriting %x to %x\n",key,rewrite));
+				ud->keycode[i] = rewrite;
+				modified = 1;
+			} else {
+				leave_control_on = 1;
+			}
+		}
+		if (modified && !leave_control_on) {
+			memset(ud->var,0,sizeof(ud->var[0]) * kbd->sc_nvar);
+			DPRINTFN(3,("zeroing ud->var\n"));
+		}
+	}
+
 	if (kbd->sc_debounce && !kbd->sc_polling) {
 		/*
 		 * Some keyboards have a peculiar quirk.  They sometimes
@@ -337,10 +420,10 @@
 	if (hidkbddebug > 5) {
 		struct timeval tv;
 		microtime(&tv);
-		DPRINTF((" at %lld.%06ld  mod=0x%02x key0=0x%02x key1=0x%02x "
+		DPRINTF((" at %lld.%06ld key0=0x%02x key1=0x%02x "
 			 "key2=0x%02x key3=0x%02x\n",
 			 (long long)tv.tv_sec, tv.tv_usec,
-			 ud->modifiers, ud->keycode[0], ud->keycode[1],
+			 ud->keycode[0], ud->keycode[1],
 			 ud->keycode[2], ud->keycode[3]));
 	}
 #endif
@@ -354,6 +437,7 @@
 	for (i = 0; i < kbd->sc_nvar; i++)
 		if ((kbd->sc_odata.var[i] & kbd->sc_var[i].mask) !=
 		    (ud->var[i] & kbd->sc_var[i].mask)) {
+			DPRINTFN(3,("hidkbd_decode_sc_var: key=0x%02x\n",kbd->sc_var[i].key));
 			ADDKEY(kbd->sc_var[i].key |
 			    ((ud->var[i] & kbd->sc_var[i].mask) ?
 			    PRESS : RELEASE));
@@ -373,7 +457,6 @@
 		rfound:
 			;
 		}
-
 		/* Check for pressed keys. */
 		for (i = 0; i < kbd->sc_nkeycode; i++) {
 			key = ud->keycode[i];
@@ -402,7 +485,6 @@
 
 	if (kbd->sc_wskbddev == NULL)
 		return;
-
 #ifdef WSDISPLAY_COMPAT_RAWKBD
 	if (kbd->sc_rawkbd) {
 		u_char cbuf[MAXKEYS * 2];
@@ -589,8 +671,8 @@
 		    h.report_ID != id)
 			continue;
 
-		DPRINTF(("hidkbd: imod=%d usage=0x%x flags=0x%x pos=%d size=%d "
-			 "cnt=%d", imod,
+		DPRINTF(("hidkbd: usage=0x%x flags=0x%x pos=%d size=%d "
+			 "cnt=%d",
 			 h.usage, h.flags, h.loc.pos, h.loc.size, h.loc.count));
 		if (h.flags & HIO_VARIABLE) {
 			/* variable reports should be one bit each */
